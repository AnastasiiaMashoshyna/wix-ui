:vars {
    fontStyle: 16px "HelveticaNeueW01-45Light", sans-serif;
    fontLight: 'HelveticaNeueW01-45Light';
    fontThin: 'HelveticaNeueW01-Thin';
    fontMedium: 'HelveticaNeueW01-65Medium';
    fontRoman: 'HelveticaNeueW01-55Roman';
    Y30: #fef0ba;
    Y40: #fac249;
    zIndexActive: 2;
    zIndexTip: 9;
    zIndexTipTop: 10;
    zIndexModal: 11;
}

:vars {
    B00: #2b81cb;
    B05: #308ddd;
    B10: #3899ec;
    B20: #4eb7f5;
    B25: #A1D7FB;
    B27: #b3e0fb;
    B30: #c1e4fe;
    B35: #c6e2f7;
    B40: #daeffe;
    B50: #eaf7ff;
    B60: #f4fafe;
    D10: #162d3d;
    D10A24: rgba(22, 45, 60, 0.24);
    D10A30: rgba(22, 45, 60, 0.3);
    D10A36: rgba(22, 45, 60, 0.36);
    D20: #32536A;
    D30: #577083;
    D40: #7a92a5;
    D50: #b6c1cd;
    D55: #cbd3dc;
    D60: #dfe5eb;
    D70: #f0f4f7;
    D80: #ffffff;
    R00: #d6453d;
    R05: #d8504c;
    R10: #ee5951;
    R20: #ff6666;
    R30: #ffd7d7;
    P00: #cd68ed;
    P10: #aa4cd8;
    P20: #cd68ed;
    GR20: #dadada;


    inputFontStyle: 16px "HelveticaNeueW01-55Roman", sans-serif;
    dropdownFontStyle: 16px "HelveticaNeueW01-45Light", sans-serif;
    borderStyle: 1px solid value(B30);
    borderRadius: 6px;
    shadowStyle: 0 6px 6px 0 rgba(22, 45, 61, 0.06),
    0 0 18px 0 rgba(22, 45, 61, 0.12);
    focusShadowStyle: 0 0 0 3px value(B27);
    textColor: value(D10);
    textColorLighter: value(D20);
    textColorDisabled: value(D50);
    inputBackgroundColor: #fff;
    inputBackgroundColorHover: value(B50);
    inputBackgroundColorDisabled: value(D80);
    borderColorDefault: value(B30);
    borderColorHover: value(B30);
    borderColorFocus: value(B20);
    borderColorDisabled: value(D60);
    borderColorError: value(R00);
    placeholderColor: value(D40);
    inputPadding: 12px 6px;

    textareaFontStyle: 16px value(fontRoman), sans-serif;
    textareaBorderStyle: solid;
    textareaPadding: 9px 12px;
    /* paddingFocus = padding - border */
    textareaPaddingFocus: 6px 9px;

    textareaBorderRadius: 0;
    textareaBorderWidth: 0 1px 1px 0;
    textareaBorderWidthFocus: 3px;

    textareaBorderColor: value(B30);
    textareaBorderColorHover: value(B35);
    textareaBorderColorFocus: value(B10);
    textareaBorderColorDisabled: value(D60);

    textareaBackgroundColor: value(D80);
    textareaBackgroundColorHover: value(B50);
    textareaBackgroundColorDisabled: value(D70);


    M1: #000000;
    M4: #EDF7FF;
    B1: #4990e2;
    B2: #5cb4ff;
    fontFamily: Arial;
    inputHeight: 36px;
    inputWidth: 360px;
}

/* Layout */
:vars {
    minWidth: 582px;
    maxWidth: 870px;
}

:vars {
    iconShadow: drop-shadow(0 1px 1px rgba(22, 45, 61, 0.6));
    textShadow:  0 1px 3px rgba(22, 45, 61, 0.9);
}

:vars {
    borderRadius3: 3px;
    borderRadius6: 6px;
}

.ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    /* mostly not supported */
    text-overflow: " [..]";
}

.inputStyle {
    background: value(inputBackgroundColor);
    border: value(borderStyle);
    border-radius: value(borderRadius);
    color: value(textColor);
    font: value(inputFontStyle);
    height: value(inputHeight);
    line-height: 1.375;
    outline: 0;
}

.inputStyle:hover {
    background: value(inputBackgroundColorHover);
    border-color: value(borderColorHover);
}

.inputStyle:focus-within {
    border-color: value(borderColorFocus);
    box-shadow: value(focusShadowStyle);
}

.inputStyle:disabled {
    background-color: value(inputBackgroundColorDisabled);
    border-color: value(borderColorDisabled);
    color: value(textColorDisabled);
}

.inputStyle:invalid {
    border-color: value(borderColorError);
}

.inputStyle::placeholder {
    font: value(inputFontStyle);
    color: value(placeholderColor);
}

.inputStyle:disabled::placeholder {
    color: value(textColorDisabled);
}

.videoIconStyle {
    background-color: transparent;
    width: 22px;
    height: 22px;
    filter: value(iconShadow);
    -webkit-filter: value(iconShadow);
}
.videoIconStyle path {
    fill: value(D80);
}
